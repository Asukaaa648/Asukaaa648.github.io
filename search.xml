<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>QQEMBY机器人使用指南</title>
      <link href="/posts/e20eb0f9.html"/>
      <url>/posts/e20eb0f9.html</url>
      
        <content type="html"><![CDATA[<p>之前EMBY是通过网页注册的，这次把它和QQ机器人结合起来（shittycode警告），一个机器人实现入库通知，自助注册，内容检索等功能。</p><p>尝试了很多架构，最后是用了<a href="https://qmsg.zendee.cn/">qmsg</a>的架构，最近5.14也是刚更新了Linux版本的NT，相当于在官方的程序下植入了插件，比cqhttp稳定得多（虽然功能没有cqhttp全，但是发个图文还是够的）</p><p><img src="https://pic.my-nas8.top/imgs/posts/202405181639428.png" alt="image-20240518163915358"></p><h1 id="功能一：入库通知"><a href="#功能一：入库通知" class="headerlink" title="功能一：入库通知"></a>功能一：入库通知</h1><p>本来nastool可以调用电报机器人还带图片，介于很多人上不了电报，只好退而求其次。</p><p><img src="https://pic.my-nas8.top/imgs/posts/202405181640474.png" alt="image-20240518164034452"></p><h1 id="功能二：自助创建用户"><a href="#功能二：自助创建用户" class="headerlink" title="功能二：自助创建用户"></a>功能二：自助创建用户</h1><p><img src="https://pic.my-nas8.top/imgs/posts/202405181641391.png" alt="image-20240518164121371"></p><h1 id="功能三：在EMBY库中搜索影片"><a href="#功能三：在EMBY库中搜索影片" class="headerlink" title="功能三：在EMBY库中搜索影片"></a>功能三：在EMBY库中搜索影片</h1><p><img src="https://pic.my-nas8.top/imgs/posts/202405181642882.png" alt="image-20240518164224859"></p><h1 id="后续还会更新更多功能"><a href="#后续还会更新更多功能" class="headerlink" title="后续还会更新更多功能"></a>后续还会更新更多功能</h1><p>如果有想要教程和源码的可以评论。扫码或点击<a href="https://qm.qq.com/q/J1F04yGRMY">此处</a>加群。</p><p><img src="https://pic.my-nas8.top/imgs/posts/202405181644035.jpg" alt="qrcode_1716021845231"></p>]]></content>
      
      
      <categories>
          
          <category> 自建项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 自助注册 </tag>
            
            <tag> EMBY </tag>
            
            <tag> QQ机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>双层住房组网方案</title>
      <link href="/posts/22cc2517.html"/>
      <url>/posts/22cc2517.html</url>
      
        <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p>老家有两层楼，每层大概100m2，单个Wi-Fi无法覆盖，经常因网络影响心情，于是就向家里人提出升级网络设备。</p><h2 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h2><p>一开始的目标：<strong>能让两层楼Wi-Fi全覆盖，到处都是满格信号</strong>。这时我想到了小米路由器的mesh组网，于是直接怒花700+买了红米AX6000和两个红米AX1800。</p><p>后来对科学上网、广告拦截、组播iptv有了要求，就考虑用OpenWRT，但OpenWRT是没有原生mesh功能的（尽管有软件包可以实现，但不稳定，也没小米的mesh好用），况且三台全刷OpenWRT又太麻烦，AX1800刷OpenWRT还要改内存，有没有一种方案既能用上OpenWRT的科学上网广告拦截，又能使用小米mesh呢？</p><h1 id="我在用的方案"><a href="#我在用的方案" class="headerlink" title="我在用的方案"></a>我在用的方案</h1><p>主路由（AX6000）刷OpenWRT，两个AX1800与主路由并联：</p><p><img src="https://pic.my-nas8.top/imgs/posts/image-20240501203821115.png" alt="image-20240501203821115"></p><p>然后在登录其中一个Wi-Fi（1）后台改为有线中续，另一个Wi-Fi（2）先直接链接（1），配置为有线mesh，然后再接到主路由上，最终在两个路由器上显示的结果为：<img src="https://pic.my-nas8.top/imgs/posts/image-20240501205316477.png" alt="image-20240501205316477"></p><p><a href="https://zhuanlan.zhihu.com/p/570804003">小米路由器有线中继（AP）下组mesh</a></p><h2 id="AX6000性能问题"><a href="#AX6000性能问题" class="headerlink" title="AX6000性能问题"></a>AX6000性能问题</h2><p>AX6000性能是强，如果你家人少可以直接开open克拉什，但由于我家设备多，其无法满足十几台设备同时上网并使用open克拉什的性能需求，最重要的一点是固件没有mosdns，无法加速redir host模式和广告过滤，并且由于闪存太小也无法自己装（就算装了性能也不够用），只能通过NAS运行虚拟机（<a href="https://drive.google.com/drive/folders/1M8FZy5Yd00II-Iqm3lFNeBYU5e4J1gZQ">佛跳墙固件</a>），然后通过<strong>主路由的Dnsmasq</strong>设置指定mac或ip 以旁路由为网关，其余设备以主路由为网关，参考<a href="https://blog.csdn.net/chuibi6295/article/details/100671197">openwrt DHCP 指定不同的网关</a></p><p>这样就顺利解决了AX6000性能不足导致的卡顿。</p><p>有人就说了，既然如此那主路由不刷OpenWRT不就行了？小米原厂固件不是可以指定dhcp的网关吗？但是如果那样设置就没办法分流了，而且虚拟机运行的佛跳墙本来性能开销就大，还会让十几台设备的流量都经过虚拟机，造成减速。这样设置既能让需要科学上网的设备科学上网，又能避免额外的性能开销。还有一点就是我对zerotier和组播iptv有需求。</p><h2 id="无线漫游问题"><a href="#无线漫游问题" class="headerlink" title="无线漫游问题"></a>无线漫游问题</h2><h3 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h3><p>Wi-Fi（1）中的Wi-Fi名称、密码、加密方式要与OpenWRT的Wi-Fi设置一模一样：</p><p><img src="https://pic.my-nas8.top/imgs/posts/image-20240501211438582.png" alt="image-20240501211438582"></p><p><img src="https://pic.my-nas8.top/imgs/posts/image-20240501211453070.png" alt="image-20240501211453070"></p><p>手机连接主路由（刷成OpenWRT的AX6000）之后上楼，连接到二楼的子路由，网络没问题，但是此时再从楼上到楼下就不行了，虽然连着Wi-Fi但提示没网，只有关闭Wi-Fi再重新打开又正常了……这一般是OpenWRT的锅，最后在网上找到了这篇文章<a href="https://post.smzdm.com/p/a6lr03wg/">OpenWRT 路由器快速漫游（802.11r）配置教程以及深度解析</a>，下面总结精简一下内容：</p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><p>原版op固件为了节省空间，自带的wpad库是残血的。因为我们需要用到满血wpad的一些功能，需要先安装满血库。如果你的op自带了wpad-openssl 或者 wpad-wolfssl（国人自己编译的很多都是），那可以跳过这步。</p><p>先在软件包里里找到自带的wpad，卸载</p><p>接着点击更新列表，随后在可用里搜索wpad-wolfssl，最后安装即可。</p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><p>进入 网络 -&gt; 无线 ，找到你想支持快速漫游的那个无线网络，点击编辑</p><p><img src="https://pic.my-nas8.top/imgs/posts/6300580023bf63457.png_e1080.jpg" alt="选择你想要修改的Wi-Fi"></p><p>进入无线安全选项，这里也是我们的重点</p><p>进入这里我们能看到大大的 “802.11r Fast Transition” 选项。是不是以为勾选了这个就万事大吉了？No no no~ 看到勾选了以后下面跳出来的选项了吗？OpenWRT不当人的一点就是，它这里给的默认值是坏的，你如果不做调整，别说快速漫游了，还会报错，增加切换所需时间。这些选项我们一个一个来看：</p><ul><li>NAS ID：每个设备对应一个<strong>唯一</strong>的ID，不能重复。这里不填就行，会自动生成的</li><li>Mobility Domain：用于认证的一个统一的四位号码。所有无线网络填一样的就行。建议填 1111 或者 1221 这种从左从右读起来都一样的，不然可能会和别的公司的设备不兼容（big endian little endian 自行<a href="https://pinpai.smzdm.com/3357/">百度</a>)</li><li>Reassociation Deadline：这里的默认数值是1000，需要改成20000</li><li>FT protocol：选择 FT over the Air</li><li>Generate PMK locally: 如果你的加密方式是WPA3，不要勾选。如果你的加密方式是WPA2，可以选择勾选。</li><li>下面那些就默认即可</li></ul><p>以上任何一个选项填写不正确都有可能导致快速漫游不工作。</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>一套组合拳打下来，即有OpenWRT的功能，又能分流不同设备，还让家里处处网络信号满格。</p>]]></content>
      
      
      <categories>
          
          <category> 折腾教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 组网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>戴森球计划安利及中后期存档展示</title>
      <link href="/posts/1d913963.html"/>
      <url>/posts/1d913963.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>非常好玩的一个游戏，杀时间利器。</p><p><img src="https://pic.my-nas8.top/imgs/posts/202404211446559.png" alt="image-20240421144649079"></p><p>这个是我玩了很久的存档，科技树已经全部点完了，经营放置、硬核工业类游戏，十分推荐一玩。</p><div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=1453376591&&page=1&as_wide=1&high_quality=1&danmaku=0"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div>]]></content>
      
      
      <categories>
          
          <category> 游戏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 戴森球计划 </tag>
            
            <tag> 戴森球 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>让家庭宽带用上80或443端口</title>
      <link href="/posts/c23f0090.html"/>
      <url>/posts/c23f0090.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>考虑到家庭宽带都是封禁443端口的，作为博客没有443端口就不能被搜索引擎索引，为此本人在网上高强度冲浪找到了一种办法，成功使本博客用上了443端口。今天的主角——cloudflare</p><h1 id="接入cloudflare"><a href="#接入cloudflare" class="headerlink" title="接入cloudflare"></a>接入cloudflare</h1><p><a href="https://www.moeelf.com/archives/305.html">CloudFlare for SaaS 官方免费CNAME接入&#x2F;自定义节点（CF自选IP）教程 – 萌精灵 (moeelf.com)</a></p><p>注：现版本的cloudflare无需绑卡也能使用自定义主机名。</p><h1 id="配置origin-rules"><a href="#配置origin-rules" class="headerlink" title="配置origin rules"></a>配置origin rules</h1><p><img src="/images/1713000111-image.png"></p><p>选择新建规则，字段选择url完整，开头为，然后填入你自己SAAS接入的域名。下方目标端口就是你需要把非443端口重写到443上的目标端口，提交后就可以了。</p><p><img src="/images/1713000172-image-1024x532.png"></p>]]></content>
      
      
      <categories>
          
          <category> 折腾教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cloudflare </tag>
            
            <tag> 家庭宽带 </tag>
            
            <tag> SAAS </tag>
            
            <tag> 博客 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>饥荒服务器开服指南及全网最全踩坑记录</title>
      <link href="/posts/94ea2402.html"/>
      <url>/posts/94ea2402.html</url>
      
        <content type="html"><![CDATA[<h1 id="写在之前"><a href="#写在之前" class="headerlink" title="写在之前"></a>写在之前</h1><p>网上确实有很多饥荒服务器的搭建教程，之所以会写这篇文章是因为网上很多教程都有瑕疵，按照知乎上的来最后会出现这样那样的问题，所以才会写这一篇博客，按照这篇博客来百分百成功，希望能帮到大家。</p><h1 id="服务器选择"><a href="#服务器选择" class="headerlink" title="服务器选择"></a>服务器选择</h1><p>可以选择云服务器：阿里云、腾讯云等，推荐配置2核2G（1-2个mod），安装CentOS7.9 64位。正好最近两家服务器都在做活动，2核2G 99一年，可以4-6人流畅运行。如果多mod的话要4G内存。购买服务器网上一搜一大堆。</p><p>如果你自己有服务器或者nas并且有公网就可以省去这笔费用，使用docker安装steamcmd。</p><h1 id="安装专用服务器"><a href="#安装专用服务器" class="headerlink" title="安装专用服务器"></a>安装专用服务器</h1><p>本篇博客以CentOS7.9为例进行搭建。</p><h2 id="连接终端"><a href="#连接终端" class="headerlink" title="连接终端"></a>连接终端</h2><p>根据服务器厂商提供的公网地址，复制后在SSH连接工具上输入，推荐<a href="https://www.hostbuf.com/t/988.html">finalshell</a></p><h2 id="更新软件包"><a href="#更新软件包" class="headerlink" title="更新软件包"></a>更新软件包</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y update</span><br></pre></td></tr></table></figure><p>如果是Ubuntu或者debian就是<code>apt update</code></p><h2 id="安装依赖项"><a href="#安装依赖项" class="headerlink" title="安装依赖项"></a>安装依赖项</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install glibc.i686 libstdc++.i686 screen libcurl.i686</span><br></pre></td></tr></table></figure><h2 id="创建steam用户"><a href="#创建steam用户" class="headerlink" title="创建steam用户"></a>创建steam用户</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">useradd steam</span><br><span class="line">passwd steam</span><br></pre></td></tr></table></figure><p>接下来要设置密码，按照提示来就行了，Linux输入密码是不会显示的，输完了直接回车就行。</p><h2 id="安装steamcmd"><a href="#安装steamcmd" class="headerlink" title="安装steamcmd"></a>安装steamcmd</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - steam</span><br><span class="line"><span class="built_in">mkdir</span> ~/Steam &amp;&amp; <span class="built_in">cd</span> ~/Steam</span><br><span class="line">curl -sqL <span class="string">&quot;https://steamcdn-a.akamaihd.net/client/installer/steamcmd_linux.tar.gz&quot;</span> | tar zxvf -</span><br></pre></td></tr></table></figure><p>这一步会访问steam的网络，可能会比较慢，如果长时间没反应或者失败就再试几次。一直不行的话建议<a href="https://juewuy.github.io/zai-linux-xi-tong-an-zhuang-ji-shi-yong-shellclash-de-jiao-cheng/#:~:text=%E4%BD%BF%E7%94%A8%E6%AD%A5%E9%AA%A4%EF%BC%9A%20%E7%99%BB%E9%99%86SSH%20%E4%BD%BF%E7%94%A8%E4%B8%80%E9%94%AE%E8%84%9A%E6%9C%AC%E5%AE%89%E8%A3%85ShellCrash,%2A%20%E5%AE%89%E8%A3%85%E5%AE%8C%E6%88%90%E5%90%8E%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%9C%A8SSH%E4%B8%AD%E4%BD%BF%E7%94%A8%EF%BC%9A%20%2A%20%E4%B9%8B%E5%90%8E%E6%8C%89%E7%85%A7%E6%96%B0%E6%89%8B%E5%BC%95%E5%AF%BC%E5%AE%8C%E6%88%90%E9%85%8D%E7%BD%AE%E5%90%8E%E5%8D%B3%E5%8F%AF%E4%BD%BF%E7%94%A8">安装shellclash</a>，自行配置订阅文件。这边建议安装，后续steam本体下载还是会比较慢，有clash会好一点。</p><h2 id="安装游戏"><a href="#安装游戏" class="headerlink" title="安装游戏"></a>安装游戏</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./steamcmd.sh</span><br></pre></td></tr></table></figure><p>确保目录在Steam文件夹下，启动steamcmd，等待steam安装更新，这一步没有魔法会比较慢。</p><p>等到右边出现<code>Steam&gt;</code>时就说明steam更新完成了。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">force_install_dir ../dontstarvetogether_dedicated_server</span><br><span class="line">login anonymous</span><br><span class="line">app_update 343050 validate</span><br></pre></td></tr></table></figure><p>这一步在获取专用服务器文件，稍等片刻，完成后输入<code>quit</code></p><h1 id="获取存档"><a href="#获取存档" class="headerlink" title="获取存档"></a>获取存档</h1><h2 id="生成存档"><a href="#生成存档" class="headerlink" title="生成存档"></a>生成存档</h2><p>如果是已有的存档上传直接看下面的内容就行了</p><p>在Windows上打开《饥荒联机版》，在选单界面点击【创建游戏】对联机需要创建的世界进行配置，服务器模式选择【公共】，配置好密码，<strong>并勾选要使用的MOD</strong>（只勾选“服务器模组”）。</p><p>配置完成后，点击“生成世界”，等待世界创建完成，在进入选择人物界面后，就可以退出了。</p><h2 id="踩坑点一：直接创建-klei文件夹导致专用服务器无存档访问权限"><a href="#踩坑点一：直接创建-klei文件夹导致专用服务器无存档访问权限" class="headerlink" title="踩坑点一：直接创建.klei文件夹导致专用服务器无存档访问权限"></a>踩坑点一：直接创建.klei文件夹导致专用服务器无存档访问权限</h2><p>_避免上述问题，需要先让服务器运行一次！！！_本人亲自踩坑！这也是很多教程没说的地方。具体启动服务器方法见下面，为了保持结构的结构完整性这里先假设你已经运行了一次服务器，并且服务器也已经在home里面创建了.klei文件夹。</p><h2 id="踩坑点二：在root登录的状态下将存档文件上传-klei里面导致专用服务器无存档访问权限"><a href="#踩坑点二：在root登录的状态下将存档文件上传-klei里面导致专用服务器无存档访问权限" class="headerlink" title="踩坑点二：在root登录的状态下将存档文件上传.klei里面导致专用服务器无存档访问权限"></a>踩坑点二：在root登录的状态下将存档文件上传.klei里面导致专用服务器无存档访问权限</h2><p>如果使用finalshell需要用steam用户登陆，winscp也是一样更换成steam用户登录再上传文件。</p><h2 id="上传存档"><a href="#上传存档" class="headerlink" title="上传存档"></a>上传存档</h2><p>Windows游戏存档在C:&#x2F;&#x2F;User&#x2F;xxx&#x2F;文档&#x2F;klei&#x2F;DoNotStarveTogether里面，将对应的世界文件夹（一般是一串数字）上传到.klei&#x2F;DoNotStarveTogether&#x2F;Cluster_1里面，cluster_token.txt没有没关系，后面会创建。</p><h2 id="获取token以及添加管理员权限"><a href="#获取token以及添加管理员权限" class="headerlink" title="获取token以及添加管理员权限"></a>获取token以及添加管理员权限</h2><p>这些操作没有坑，建议上网搜，或者参照<a href="https://zhuanlan.zhihu.com/p/625645476">这篇文章</a></p><h1 id="订阅mod（可选）"><a href="#订阅mod（可选）" class="headerlink" title="订阅mod（可选）"></a>订阅mod（可选）</h1><p>还是参照上面的文章来</p><h1 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">vim boot.sh</span><br></pre></td></tr></table></figure><p>复制下段代码到终端中，粘贴前先按i，粘贴后按esc，再输入<code>:wq</code>（英文输入法的冒号）回车</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">steamcmd_dir=<span class="string">&quot;<span class="variable">$HOME</span>/steamcmd&quot;</span></span><br><span class="line">install_dir=<span class="string">&quot;<span class="variable">$HOME</span>/dontstarvetogether_dedicated_server&quot;</span></span><br><span class="line">cluster_name=<span class="string">&quot;Cluster_1&quot;</span></span><br><span class="line">dontstarve_dir=<span class="string">&quot;<span class="variable">$HOME</span>/.klei/DoNotStarveTogether&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">fail</span></span>() &#123;</span><br><span class="line">    <span class="built_in">echo</span> Error: <span class="string">&quot;<span class="variable">$@</span>&quot;</span> &gt;&amp;2</span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">check_for_file</span></span>() &#123; </span><br><span class="line">    <span class="keyword">if</span> [ ! -e <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        fail <span class="string">&quot;Missing file: <span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$steamcmd_dir</span>&quot;</span> || fail <span class="string">&quot;Missing <span class="variable">$steamcmd_dir</span> directory!&quot;</span></span><br><span class="line">check_for_file <span class="string">&quot;steamcmd.sh&quot;</span></span><br><span class="line">check_for_file <span class="string">&quot;<span class="variable">$dontstarve_dir</span>/<span class="variable">$cluster_name</span>/cluster.ini&quot;</span></span><br><span class="line">check_for_file <span class="string">&quot;<span class="variable">$dontstarve_dir</span>/<span class="variable">$cluster_name</span>/cluster_token.txt&quot;</span></span><br><span class="line">check_for_file <span class="string">&quot;<span class="variable">$dontstarve_dir</span>/<span class="variable">$cluster_name</span>/Master/server.ini&quot;</span></span><br><span class="line">check_for_file <span class="string">&quot;<span class="variable">$dontstarve_dir</span>/<span class="variable">$cluster_name</span>/Caves/server.ini&quot;</span></span><br><span class="line">check_for_file <span class="string">&quot;<span class="variable">$install_dir</span>/bin&quot;</span></span><br><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$install_dir</span>/bin&quot;</span> || fail</span><br><span class="line">run_shared=(./dontstarve_dedicated_server_nullrenderer)</span><br><span class="line">run_shared+=(-console)</span><br><span class="line">run_shared+=(-cluster <span class="string">&quot;<span class="variable">$cluster_name</span>&quot;</span>)</span><br><span class="line">run_shared+=(-monitor_parent_process $$)</span><br><span class="line">run_shared+=(-shard)</span><br><span class="line"><span class="string">&quot;<span class="variable">$&#123;run_shared[@]&#125;</span>&quot;</span> Caves | sed <span class="string">&#x27;s/^/Caves: /&#x27;</span> &amp;</span><br><span class="line"><span class="string">&quot;<span class="variable">$&#123;run_shared[@]&#125;</span>&quot;</span> Master | sed <span class="string">&#x27;s/^/Master: /&#x27;</span></span><br></pre></td></tr></table></figure><p>脚本中默认启动的是32位服务器，如果想启动64位服务(会用更大的内存，相对也会更流畅一些），只需要更改这两行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$install_dir</span>/bin&quot;</span> || fail</span><br><span class="line">run_shared=(./dontstarve_dedicated_server_nullrenderer)</span><br></pre></td></tr></table></figure><p>为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$install_dir</span>/bin64&quot;</span> || fail</span><br><span class="line">run_shared=(./dontstarve_dedicated_server_nullrenderer_x64)</span><br></pre></td></tr></table></figure><h2 id="踩坑点三：启动脚本在win端创建上传服务器导致出现所有者问题而提示没有该文件"><a href="#踩坑点三：启动脚本在win端创建上传服务器导致出现所有者问题而提示没有该文件" class="headerlink" title="踩坑点三：启动脚本在win端创建上传服务器导致出现所有者问题而提示没有该文件"></a>踩坑点三：启动脚本在win端创建上传服务器导致出现所有者问题而提示没有该文件</h2><p>一定要<code>vim boot.sh</code>，不能直接上传。</p><h2 id="赋予boot-sh执行权限"><a href="#赋予boot-sh执行权限" class="headerlink" title="赋予boot.sh执行权限"></a>赋予boot.sh执行权限</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> u+x boot.sh</span><br></pre></td></tr></table></figure><p>注意，这里如果是在steam用户下使用sudo要先把steam添加到sudors</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br><span class="line">usermod -G sudo steam</span><br></pre></td></tr></table></figure><p>好了之后再<code>su - steam</code>切换回来，再执行上面的指令</p><h1 id="开放端口"><a href="#开放端口" class="headerlink" title="开放端口"></a>开放端口</h1><p>udp:10888、10999、10998、8767、27017</p><p>tcp:8767、27017</p><h2 id="踩坑点四：未开启CentOS自带的防火墙使得无法连通"><a href="#踩坑点四：未开启CentOS自带的防火墙使得无法连通" class="headerlink" title="踩坑点四：未开启CentOS自带的防火墙使得无法连通"></a>踩坑点四：未开启CentOS自带的防火墙使得无法连通</h2><p>虽然不知道为什么，但是确实如此，必须开启防火墙端口才能通。</p><p>默认防火墙是关着的，开启输入指令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld</span><br><span class="line">systemctl <span class="built_in">enable</span> firewalld</span><br><span class="line">systemctl status firewalld</span><br></pre></td></tr></table></figure><p>如果有绿色的active就说明成功了</p><p>接着一个个输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=端口/协议类型 --permanent</span><br></pre></td></tr></table></figure><p>例如开放10888udp则输入</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=10888/udp --permanent</span><br></pre></td></tr></table></figure><p>udp\tcp都要放行，全部搞完了重载一下防火墙</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>输入以下指令查看是否成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --list-ports</span><br></pre></td></tr></table></figure><p>ports右边如果有刚才添加的就成功了，<strong>之后别忘了在阿里云的安全组或者腾讯的防火墙也放行一下。</strong></p><h1 id="启动饥荒服务器"><a href="#启动饥荒服务器" class="headerlink" title="启动饥荒服务器"></a>启动饥荒服务器</h1><p>直接<code>./boot.sh</code>就行了，或者套一个screen在里面启动也可以</p><h2 id="如果提示启动成功但是搜不到是因为没有更新到最新版本"><a href="#如果提示启动成功但是搜不到是因为没有更新到最新版本" class="headerlink" title="如果提示启动成功但是搜不到是因为没有更新到最新版本"></a>如果提示启动成功但是搜不到是因为没有更新到最新版本</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su - steam</span><br><span class="line"><span class="built_in">cd</span> ~/Steam</span><br><span class="line">./steamcmd.sh +force_install_dir ../dontstarvetogether_dedicated_server +login anonymous +app_update 343050 validate +quit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 折腾教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 饥荒 </tag>
            
            <tag> 服务器 </tag>
            
            <tag> 教程 </tag>
            
            <tag> 踩坑 </tag>
            
            <tag> Linux </tag>
            
            <tag> CentOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BETTER MC游玩指南</title>
      <link href="/posts/61d93ece.html"/>
      <url>/posts/61d93ece.html</url>
      
        <content type="html"><![CDATA[<h1 id="Windows端"><a href="#Windows端" class="headerlink" title="Windows端"></a>Windows端</h1><h2 id="1-下载PCL2启动器"><a href="#1-下载PCL2启动器" class="headerlink" title="1.下载PCL2启动器"></a>1.下载PCL2启动器</h2><p><a href="https://afdian.net/p/0164034c016c11ebafcb52540025c377">PCL 正式版下载丨龙腾猫跃丨爱发电 (afdian.net)</a></p><h2 id="2-安装整合包"><a href="#2-安装整合包" class="headerlink" title="2.安装整合包"></a>2.安装整合包</h2><p>下载后打开将_Better MC [FABRIC] 1.20.1 v24.zip_（见文末）拖入启动器，自动安装。如果半天没有速度的话说明需要科学上网，自行解决。</p><p>之后选择启动游戏，PCL2会自动安装Java，等待启动完毕即可游玩。</p><h1 id="MAC端"><a href="#MAC端" class="headerlink" title="MAC端"></a>MAC端</h1><h2 id="1-安装JAVA17（JRE）"><a href="#1-安装JAVA17（JRE）" class="headerlink" title="1.安装JAVA17（JRE）"></a>1.安装JAVA17（JRE）</h2><p>JAVA17<a href="https://download.oracle.com/java/17/archive/jdk-17.0.10_macos-aarch64_bin.dmg">下载地址</a></p><h2 id="2-下载HMCL启动器"><a href="#2-下载HMCL启动器" class="headerlink" title="2.下载HMCL启动器"></a>2.下载HMCL启动器</h2><p><a href="https://hmcl.huangyuhui.net/download/">HMCL下载地址</a>，下载完毕后双击打开HMCL.jar文件</p><h2 id="3-安装整合包"><a href="#3-安装整合包" class="headerlink" title="3.安装整合包"></a>3.安装整合包</h2><p>将_Better MC [FABRIC] 1.20.1 v24.zip_（见文末或在<a href="https://www.curseforge.com/minecraft/modpacks/better-mc-fabric-bmc2/files/5021184">此处下载</a>_（可能需要科学上网）_）<strong>拖入启动器，自动安装</strong>。如果半天没有速度的话说明需要科学上网，自行解决。</p><h1 id="安装附加mod（必装，不装无法进入游戏）"><a href="#安装附加mod（必装，不装无法进入游戏）" class="headerlink" title="安装附加mod（必装，不装无法进入游戏）"></a>安装附加mod（必装，不装无法进入游戏）</h1><h2 id="褪魔台"><a href="#褪魔台" class="headerlink" title="褪魔台"></a><a href="https://www.curseforge.com/minecraft/mc-mods/disenchantment-edit-table">褪魔台</a></h2><p>就是字面意思，可以将装备的附魔属性变成附魔书。</p><h3 id="点击此处下载或在文末处网盘下载"><a href="#点击此处下载或在文末处网盘下载" class="headerlink" title="点击此处下载或在文末处网盘下载"></a><a href="https://cdn.modrinth.com/data/W9CiRGYK/versions/jsoERxuz/infusion_table-1.2.0-1.20-fabric.jar">点击此处下载</a>或在文末处网盘下载</h3><h2 id="YES-Steve-model"><a href="#YES-Steve-model" class="headerlink" title="YES Steve model"></a><a href="https://www.curseforge.com/minecraft/mc-mods/yes-steve-model">YES Steve model</a></h2><p><img src="https://pic.my-nas8.top/imgs/posts/1707571693-image.png"></p><p>可以自定义皮肤和动作</p><h3 id="点击此处下载或在文末处网盘下载-1"><a href="#点击此处下载或在文末处网盘下载-1" class="headerlink" title="点击此处下载或在文末处网盘下载"></a><a href="https://www.curseforge.com/minecraft/mc-mods/yes-steve-model/files/4702502">点击此处下载</a>或在文末处网盘下载</h3><h2 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h2><p><img src="https://pic.my-nas8.top/imgs/posts/1707444424-image.png"></p><p><img src="https://pic.my-nas8.top/imgs/posts/1707444446-image.png"></p><p>将下好的_infusion_table-1.2.0-1.20-fabric.jar_和_yesstevemodel-1.20-fabric-release-1.1.5-hotfix-2.jar_<strong>拖入</strong>弹出的文件夹里即可。HMCL与之类似，也是放入mods文件夹里。</p><h1 id="安装Simple-Voice-Chat（可选）"><a href="#安装Simple-Voice-Chat（可选）" class="headerlink" title="安装Simple Voice Chat（可选）"></a>安装Simple Voice Chat（可选）</h1><p>Simple Voice Chat是一个mc内置的语音聊天mod</p><p>安装方法同上。</p><h1 id="服务器地址"><a href="#服务器地址" class="headerlink" title="服务器地址"></a>服务器地址</h1><p>mc.my-nas8.top</p><figure><p><img src="https://pic.my-nas8.top/imgs/posts/1707444530-image.png"></p><figcaption><p>在页面中填写上述地址</p></figcaption></figure><p>已关闭在线模式，离线登录亦可进入。</p><h1 id="其他问题……？"><a href="#其他问题……？" class="headerlink" title="其他问题……？"></a>其他问题……？</h1><p><img src="https://pic.my-nas8.top/imgs/posts/1707572071-eb198f01b50abdea9d9a7211e2f45b48.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 自建项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MC </tag>
            
            <tag> 游玩指南 </tag>
            
            <tag> Better MC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建EMBY影音服务器使用指南</title>
      <link href="/posts/f0baf2f9.html"/>
      <url>/posts/f0baf2f9.html</url>
      
        <content type="html"><![CDATA[<h2 id="简单的展示"><a href="#简单的展示" class="headerlink" title="简单的展示"></a>简单的展示</h2><p><img src="https://pic.my-nas8.top/imgs/posts/1703893440-PixPin_2023-12-30_07-43-53-1024x517.png"></p><p><img src="https://pic.my-nas8.top/imgs/posts/1703893408-PixPin_2023-12-30_07-43-14-1024x517.png"></p><p><img src="https://pic.my-nas8.top/imgs/posts/1703893328-PixPin_2023-12-30_07-40-24-1024x517.png"></p><p><img src="https://pic.my-nas8.top/imgs/posts/1703893180-image-1024x517.png"></p><h2 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h2><p>这套影音服务器前前后后将近花了5天时间完成最基本的下载挂削，后续DDNS（针对IPv6）、<em>内网穿透（针对IPv4）又花了不少时间……尤其是ipv4，国内不备案不能域名解析，被迫将内网穿透服务器放在香港。IPv4的流量是要收费的（1RMB&#x2F;GB），而且因为国内网络环境导致不是很稳定……总之现在免费开放给大家使用！</em></p><p>现在针对ipv4有了新方案：<strong>zerotier虚拟局域网ipv6直连到有公网的ipv4（电信），再进行访问。速度大幅提升，和直连没啥区别了。</strong></p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="选择最适合你的网址"><a href="#选择最适合你的网址" class="headerlink" title="选择最适合你的网址"></a>选择最适合你的网址</h3><p>目前访问该网站又两个网址：一个是<a href="https://baike.baidu.com/item/IPv6/172297">ipv6</a>，一个是<a href="https://baike.baidu.com/item/IPv4?fromModule=lemma_search-box">ipv4</a>。</p><ul><li>测试你家是否打开ipv6：<a href="https://www.test-ipv6.com/index.html.zh_CN">点击这里</a></li></ul><p>如果家里开了ipv6建议使用<a href="https://ipv6.my-nas8.top:8921/">这个网址</a>来访问。这个网址是点对点直连的没有经过流量转发，速度快</p><p>如果家里没开ipv6那就使用<a href="http://ipv4.my-nas8.top:8085/"><strong>这个网址</strong></a>来访问。这个网址流量情况是：我的服务器 -&gt;（zerotier内网ipv6直连）-&gt;有ipv4公网的服务器-&gt;你的设备。<strong>该线路已经进行了优化，速度媲美ipv6。</strong></p><h4 id="网页浏览（仅电脑端推荐）"><a href="#网页浏览（仅电脑端推荐）" class="headerlink" title="网页浏览（仅电脑端推荐）"></a>网页浏览（仅电脑端推荐）</h4><p>选择合适的网址后会有“EMBY”四字，稍安勿躁……</p><p><strong>默认的guest有限速5Mbps</strong>。若想解锁限制可注册用户。</p><h4 id="手机APP浏览"><a href="#手机APP浏览" class="headerlink" title="手机APP浏览"></a>手机APP浏览</h4><p>针对手机有特别优化（字幕）。IOS&#x2F;iPad OS在app store搜索EMBY即可下载，但是软件本身是收费的，这里有个<a href="https://hexsen.com/ios-ipad-crack-emby.html">小技巧</a>让EMBY开心起来。安卓端开心版的安装包放在文章结尾处按需取。</p><h4 id="没错，还有安卓TV版"><a href="#没错，还有安卓TV版" class="headerlink" title="没错，还有安卓TV版"></a>没错，还有安卓TV版</h4><p>下载链接也在文章结尾处！安卓版本需大于6.0</p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>十分建议注册一个自己用的账号，不限速，同时进度多端同步！</p><h2 id="IPv6开启方法"><a href="#IPv6开启方法" class="headerlink" title="IPv6开启方法"></a>IPv6开启方法</h2><p><a href="https://www.luyouqi.com/shezhi/2308.html">路由器开启方法</a></p><p>完成后<a href="https://www.test-ipv6.com/index.html.zh_CN">测试是否支持IPv6</a>，10分为成功！如果不行重启路由器（直接断电等3-5分钟再接上），还不行说明光猫没开ipv6，看下面步骤</p><ul><li><p>移动<a href="https://zhuanlan.zhihu.com/p/71059830">打开方法</a></p></li><li><p>其他运营商基本一样，搜索引擎搜索：XX运营商光猫开启IPv6。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 自建项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nas </tag>
            
            <tag> emby </tag>
            
            <tag> 影音服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++比赛打分流程系统</title>
      <link href="/posts/77ac5303.html"/>
      <url>/posts/77ac5303.html</url>
      
        <content type="html"><![CDATA[<p>本程序通过C++实现成员创建和导入，流程管理，分数自动计算（并行），排名分数导出等功能。</p><p>通过定义类<code>compareManager</code>类实现以上功能。</p><p>下载源代码在文章末尾。</p><h2 id="compareManager-h"><a href="#compareManager-h" class="headerlink" title="compareManager.h"></a>compareManager.h</h2><p><code>compareManager</code>类的声明在<code>compareManager.h</code>中：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;competitor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设计流程管理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">compareManager</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">compareManager</span>();</span><br><span class="line"></span><br><span class="line">~<span class="built_in">compareManager</span>();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_Menu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Design_Process</span><span class="params">(<span class="type">int</span> choice)</span></span>;<span class="comment">//程序流程人数、晋级人数获取以及算法的确定</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createCompetitor</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">import_Competitor</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_info</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Start_Competition</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Exit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Competition_Draw</span><span class="params">()</span></span>;<span class="comment">//抽签程序</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Competition_Contest</span><span class="params">()</span></span>;<span class="comment">//比赛进行程序</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show_Score</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">print_first_Num</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">print_scond_Num</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//初始化容器属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initCompetition</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一轮</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v1;</span><br><span class="line"><span class="comment">//晋级</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v2;</span><br><span class="line"><span class="comment">//胜出</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;vVictory;</span><br><span class="line"><span class="comment">//编号对应选手</span></span><br><span class="line">map&lt;<span class="type">int</span>, Competitor&gt;m_Competitor;</span><br><span class="line"><span class="comment">//比赛轮数</span></span><br><span class="line"><span class="type">int</span> m_Index;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> first_Num;</span><br><span class="line"><span class="type">int</span> scond_Num;</span><br><span class="line"><span class="type">int</span> judges_Num;</span><br><span class="line"><span class="type">bool</span> Whether_To_Remove;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;competitor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;functional&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;numeric&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设计流程管理类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">compareManager</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="built_in">compareManager</span>();</span><br><span class="line"></span><br><span class="line">~<span class="built_in">compareManager</span>();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_Menu</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Design_Process</span><span class="params">(<span class="type">int</span> choice)</span></span>;<span class="comment">//程序流程人数、晋级人数获取以及算法的确定</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">createCompetitor</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">import_Competitor</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Show_info</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Start_Competition</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Exit</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Competition_Draw</span><span class="params">()</span></span>;<span class="comment">//抽签程序</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Competition_Contest</span><span class="params">()</span></span>;<span class="comment">//比赛进行程序</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">show_Score</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">print_first_Num</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">print_scond_Num</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//初始化容器属性</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">initCompetition</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//第一轮</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v1;</span><br><span class="line"><span class="comment">//晋级</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v2;</span><br><span class="line"><span class="comment">//胜出</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;vVictory;</span><br><span class="line"><span class="comment">//编号对应选手</span></span><br><span class="line">map&lt;<span class="type">int</span>, Competitor&gt;m_Competitor;</span><br><span class="line"><span class="comment">//比赛轮数</span></span><br><span class="line"><span class="type">int</span> m_Index;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="type">int</span> first_Num;</span><br><span class="line"><span class="type">int</span> scond_Num;</span><br><span class="line"><span class="type">int</span> judges_Num;</span><br><span class="line"><span class="type">bool</span> Whether_To_Remove;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="competitor-h"><a href="#competitor-h" class="headerlink" title="competitor.h"></a>competitor.h</h2><p>为了更好的管理选手的数据，又定义了一个<code>competitor</code>类，声明在<code>competitor.h</code>中：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Competitor</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string class_;</span><br><span class="line">string category;</span><br><span class="line">string name;</span><br><span class="line">string song;</span><br><span class="line"><span class="type">double</span> n_Score[<span class="number">2</span>];</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="compareManager-cpp"><a href="#compareManager-cpp" class="headerlink" title="compareManager.cpp"></a>compareManager.cpp</h2><p><code>compareManager</code>类实现在<code>compareManager.cpp</code>文件中：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;compareManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;competitor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">compareManager::<span class="built_in">compareManager</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//初始化容器和属性</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">initCompetition</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">compareManager::~<span class="built_in">compareManager</span>()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::Show_Menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎使用活动比赛流程管理系统！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入“1”开始演讲比赛,输入“0”退出程序：&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//程序流程人数、晋级人数获取以及算法的确定</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::Design_Process</span><span class="params">(<span class="type">int</span> choice)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (choice != <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入参赛选手人数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; <span class="keyword">this</span>-&gt;first_Num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">this</span>-&gt;<span class="built_in">import_Competitor</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入晋级（决赛）参赛人数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; <span class="keyword">this</span>-&gt;scond_Num;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入评委人数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; <span class="keyword">this</span>-&gt;judges_Num;</span><br><span class="line"><span class="type">int</span> judge;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;评分时是否去掉一个最高分和最低分？（“1”表示“是”，“0”表示“否”）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; judge;</span><br><span class="line"><span class="keyword">if</span> (judge == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;Whether_To_Remove = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(judge== <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;Whether_To_Remove = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;本次比赛分为初赛和决赛，初赛一共有&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;first_Num &lt;&lt; <span class="string">&quot;人，其中晋级&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;scond_Num &lt;&lt; <span class="string">&quot;人&quot;</span>&lt;&lt;endl&lt;&lt;<span class="string">&quot;是否正确？（“1”表示“是”，“0”表示“否”）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; judge;</span><br><span class="line"><span class="keyword">if</span> (judge == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选手姓名、编号的生成</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::createCompetitor</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;first_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line">string name;</span><br><span class="line">string song;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入选手&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;的姓名:&quot;</span>;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入选手&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;歌曲名:&quot;</span>;</span><br><span class="line">cin &gt;&gt; song;</span><br><span class="line">Competitor ct;</span><br><span class="line">ct.name = name;</span><br><span class="line">ct.song = song;</span><br><span class="line"><span class="comment">//初始化分数</span></span><br><span class="line">ct.n_Score[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">ct.n_Score[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建选手编号</span></span><br><span class="line"><span class="keyword">this</span>-&gt;v1.<span class="built_in">push_back</span>(i + <span class="number">10001</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选手编号与名字对应</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Competitor.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(i + <span class="number">10001</span>, ct));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::import_Competitor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream f;</span><br><span class="line">string line;</span><br><span class="line">f.<span class="built_in">open</span>(<span class="string">&quot;Competitor_Data.csv&quot;</span>, ios::in);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!f.<span class="built_in">is_open</span>())</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;Error:打开文件失败，请确保目录下有该文件！程序自动退出…&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">getline</span>(f, line);<span class="comment">//跳过第一行</span></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(f, line))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;读取一行的数据：&quot; &lt;&lt; line &lt;&lt; endl;</span></span><br><span class="line">string str;</span><br><span class="line">vector&lt;string&gt; v_data;</span><br><span class="line"></span><br><span class="line">Competitor ct;</span><br><span class="line"><span class="function">istringstream <span class="title">readstr</span><span class="params">(line)</span></span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(readstr, str, <span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//cout &lt;&lt; str &lt;&lt; endl;</span></span><br><span class="line">v_data.<span class="built_in">push_back</span>(str);</span><br><span class="line">&#125;</span><br><span class="line">ct.class_ = v_data[<span class="number">0</span>];</span><br><span class="line">ct.name = v_data[<span class="number">1</span>];</span><br><span class="line">ct.category = v_data[<span class="number">2</span>];</span><br><span class="line">ct.song = v_data[<span class="number">3</span>];</span><br><span class="line"><span class="comment">//cout &lt;&lt; ct.name&lt;&lt;&quot; &quot;&lt;&lt;ct.song&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">v_data.<span class="built_in">clear</span>();</span><br><span class="line"><span class="comment">//初始化分数</span></span><br><span class="line">ct.n_Score[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">ct.n_Score[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//创建选手编号</span></span><br><span class="line"><span class="keyword">this</span>-&gt;v1.<span class="built_in">push_back</span>(count + <span class="number">10001</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//选手编号与名字对应</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Competitor.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(count + <span class="number">10001</span>, ct));</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>-&gt;first_Num = count;</span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;共计：&quot; &lt;&lt; this-&gt;first_Num &lt;&lt; endl;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::Show_info</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (map&lt;<span class="type">int</span>, Competitor&gt;::iterator it = <span class="keyword">this</span>-&gt;m_Competitor.<span class="built_in">begin</span>(); it != <span class="keyword">this</span>-&gt;m_Competitor.<span class="built_in">end</span>(); it++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选手编号：&quot;</span> &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot;  姓名：&quot;</span> &lt;&lt; it-&gt;second.name &lt;&lt; <span class="string">&quot;  分数：&quot;</span> &lt;&lt; it-&gt;second.n_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::initCompetition</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;v1.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;v2.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;vVictory.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;m_Competitor.<span class="built_in">clear</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;first_Num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">this</span>-&gt;scond_Num = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//轮数</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Index = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::Start_Competition</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//第一轮比赛</span></span><br><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Competition_Draw</span>();</span><br><span class="line"><span class="comment">//比赛+保存数据</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Competition_Contest</span>();</span><br><span class="line"><span class="comment">//显示优胜者</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">show_Score</span>();</span><br><span class="line"><span class="comment">//第二轮比赛</span></span><br><span class="line"><span class="comment">//抽签</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Competition_Draw</span>();</span><br><span class="line"><span class="comment">//比赛+保存数据</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">Competition_Contest</span>();</span><br><span class="line"><span class="comment">//显示优胜者</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">show_Score</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::Competition_Draw</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&lt;&lt;&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;&gt;&gt;比赛正在抽签…&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;——————————————————————————&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;抽签结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">ofstream p;</span><br><span class="line">string file_Name = <span class="string">&quot;第&quot;</span> + <span class="built_in">to_string</span>(<span class="keyword">this</span>-&gt;m_Index) + <span class="string">&quot;轮抽签顺序.csv&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">p.<span class="built_in">open</span>(file_Name, ios::out | ios::trunc);</span><br><span class="line">p &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;班级&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;种类&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;节目&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">srand</span>(<span class="built_in">static_cast</span>&lt;<span class="type">unsigned</span> <span class="type">int</span>&gt;(<span class="built_in">time</span>(<span class="number">0</span>)));</span><br><span class="line"><span class="built_in">random_shuffle</span>(v1.<span class="built_in">begin</span>(), v1.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v1.<span class="built_in">begin</span>(); it != v1.<span class="built_in">end</span>(); it++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; m_Competitor[*it].class_&lt;&lt;<span class="string">&quot; &quot;</span> &lt;&lt; m_Competitor[*it].name&lt;&lt;<span class="string">&quot;的&quot;</span>&lt;&lt;m_Competitor[*it].category </span><br><span class="line">&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;m_Competitor[*it].song &lt;&lt; endl;</span><br><span class="line"><span class="comment">//文件写入</span></span><br><span class="line">p &lt;&lt; *it &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].class_ &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].name &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].category</span><br><span class="line">&lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].song &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">p.<span class="built_in">open</span>(file_Name, ios::out | ios::trunc);</span><br><span class="line">p &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;班级&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;种类&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;节目&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">random_shuffle</span>(v2.<span class="built_in">begin</span>(), v2.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v2.<span class="built_in">begin</span>(); it != v2.<span class="built_in">end</span>(); it++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[*it].name &lt;&lt; endl;</span><br><span class="line"><span class="comment">//文件写入</span></span><br><span class="line">p &lt;&lt; *it &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].class_ &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].name &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].category</span><br><span class="line">&lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; m_Competitor[*it].song &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">p.<span class="built_in">close</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;——————————————————————————&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;抽签顺序已经输出在文件目录下！&quot;</span> &lt;&lt; endl&lt;&lt;<span class="string">&quot;按任意键开始比赛&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::Competition_Contest</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;——————第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛正式开始！——————&quot;</span> &lt;&lt; endl;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;v_Src;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) v_Src = v1; <span class="keyword">else</span> v_Src = v2;<span class="comment">//判断第几轮</span></span><br><span class="line"><span class="comment">//文件输出流</span></span><br><span class="line">ofstream p;</span><br><span class="line">string file_Name1 = <span class="string">&quot;第&quot;</span> + <span class="built_in">to_string</span>(<span class="keyword">this</span>-&gt;m_Index) + <span class="string">&quot;轮选手得分.csv&quot;</span>;</span><br><span class="line">p.<span class="built_in">open</span>(file_Name1, ios::out | ios::trunc);</span><br><span class="line">p &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;平均分&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt; Score;<span class="comment">//临时数据排序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历</span></span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v_Src.<span class="built_in">begin</span>(); it != v_Src.<span class="built_in">end</span>(); it++)</span><br><span class="line">&#123;</span><br><span class="line">deque&lt;<span class="type">double</span>&gt; d;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选手&quot;</span> &lt;&lt; *it &lt;&lt;<span class="string">&quot; &quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[*it].name &lt;&lt; <span class="string">&quot;正在比赛！下面请为他（她）打分!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;judges_Num; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; <span class="string">&quot;位评委打分：&quot;</span> ;</span><br><span class="line"><span class="type">double</span> score;</span><br><span class="line">cin &gt;&gt; score;</span><br><span class="line">d.<span class="built_in">push_back</span>(score);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(d.<span class="built_in">begin</span>(), d.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">double</span>&gt;());</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;Whether_To_Remove)</span><br><span class="line">&#123;</span><br><span class="line">d.<span class="built_in">pop_front</span>();</span><br><span class="line">d.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> sum = <span class="built_in">accumulate</span>(d.<span class="built_in">begin</span>(), d.<span class="built_in">end</span>(), <span class="number">0.0f</span>);</span><br><span class="line"><span class="type">double</span> avg = sum / (<span class="type">double</span>)d.<span class="built_in">size</span>();<span class="comment">//平均分</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;他(她)的平均分是：&quot;</span> &lt;&lt; avg;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line">p &lt;&lt; *it &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[*it].name &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; avg &lt;&lt; endl;</span><br><span class="line"><span class="comment">//同步到map容器中</span></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Competitor[*it].n_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] = avg;</span><br><span class="line"><span class="comment">//数据放入临时容器</span></span><br><span class="line">Score.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(avg, *it));</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">p.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出分数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;::iterator it = Score.<span class="built_in">begin</span>(); it != Score.<span class="built_in">end</span>(); it++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot; 编号：&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; <span class="string">&quot; 姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[it-&gt;second].name &lt;&lt; <span class="string">&quot; 分数：&quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[it-&gt;second].n_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//文件输出流</span></span><br><span class="line">ofstream f;</span><br><span class="line">string file_Name2 = <span class="string">&quot;第&quot;</span> + <span class="built_in">to_string</span>(<span class="keyword">this</span>-&gt;m_Index) + <span class="string">&quot;轮优胜者名单.csv&quot;</span>;</span><br><span class="line">f.<span class="built_in">open</span>(file_Name2, ios::out | ios::trunc);</span><br><span class="line">f &lt;&lt; <span class="string">&quot;编号&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;姓名&quot;</span> &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="string">&quot;分数&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//取前scond_Num名</span></span><br><span class="line"><span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (multimap&lt;<span class="type">double</span>, <span class="type">int</span>, greater&lt;<span class="type">double</span>&gt;&gt;::iterator it = Score.<span class="built_in">begin</span>(); it != Score.<span class="built_in">end</span>() &amp;&amp; count&lt;<span class="keyword">this</span>-&gt;scond_Num; it++,count++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">v2.<span class="built_in">push_back</span>((*it).second);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">vVictory.<span class="built_in">push_back</span>((*it).second);</span><br><span class="line">&#125;</span><br><span class="line">f &lt;&lt; (*it).second &lt;&lt; <span class="string">&quot;,&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[it-&gt;second].name &lt;&lt; <span class="string">&quot;,&quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[it-&gt;second].n_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Score.<span class="built_in">clear</span>();</span><br><span class="line">f.<span class="built_in">close</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;第&quot;</span>&lt;&lt;<span class="keyword">this</span>-&gt;m_Index&lt;&lt;<span class="string">&quot;轮所有选手的平均分已经输出在文件目录下！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;——————第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Index &lt;&lt; <span class="string">&quot;轮比赛结束——————&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::show_Score</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;——————第&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt; m_Index &lt;&lt; <span class="string">&quot;轮比赛优胜者如下——————&quot;</span> &lt;&lt; endl;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>-&gt;m_Index == <span class="number">1</span>) v = v2; <span class="keyword">else</span> v = vVictory;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;<span class="type">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>(); it != v.<span class="built_in">end</span>(); it++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选手编号：&quot;</span> &lt;&lt; *it &lt;&lt; <span class="string">&quot;  姓名：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[*it].name &lt;&lt; <span class="string">&quot;  分数：&quot;</span></span><br><span class="line">&lt;&lt; <span class="keyword">this</span>-&gt;m_Competitor[*it].n_Score[<span class="keyword">this</span>-&gt;m_Index - <span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">this</span>-&gt;m_Index==<span class="number">1</span>) <span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">this</span>-&gt;m_Index++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compareManager::print_first_Num</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;first_Num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compareManager::print_scond_Num</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">this</span>-&gt;scond_Num;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">compareManager::Exit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;欢迎下次使用！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="主程序-cpp"><a href="#主程序-cpp" class="headerlink" title="主程序.cpp"></a>主程序.cpp</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;compareManager.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;competitor.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">compareManager cm;</span><br><span class="line"><span class="type">int</span> choice = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">cm.<span class="built_in">Show_Menu</span>();</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line"><span class="keyword">switch</span> (choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">case</span>(<span class="number">1</span>):</span><br><span class="line"><span class="type">int</span> choice;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;是否有选手名单？（“1”表示“是”，“0”表示“否”）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; choice;</span><br><span class="line">cm.<span class="built_in">Design_Process</span>(choice); <span class="comment">//程序流程人数、晋级人数获取以及算法的确定</span></span><br><span class="line"><span class="keyword">if</span> (choice == <span class="number">0</span>)  cm.<span class="built_in">createCompetitor</span>(); <span class="comment">//选手姓名、编号的生成</span></span><br><span class="line">cm.<span class="built_in">Start_Competition</span>();</span><br><span class="line">cm.<span class="built_in">Exit</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">case</span>(<span class="number">0</span>):</span><br><span class="line">cm.<span class="built_in">Exit</span>();</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开源程序 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 比赛 </tag>
            
            <tag> 流程 </tag>
            
            <tag> 打分 </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
